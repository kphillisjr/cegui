// This file has been generated by Py++.

#include "boost/python.hpp"
#include "python_CEGUI.h"
#include "Vector2f.pypp.hpp"

namespace bp = boost::python;

void register_Vector2f_class(){

    { //::CEGUI::Vector2< float >
        typedef bp::class_< CEGUI::Vector2< float > > Vector2f_exposer_t;
        Vector2f_exposer_t Vector2f_exposer = Vector2f_exposer_t( "Vector2f", bp::init< >() );
        bp::scope Vector2f_scope( Vector2f_exposer );
        Vector2f_exposer.def( bp::init< float const &, float const & >(( bp::arg("x"), bp::arg("y") )) );
        Vector2f_exposer.def( bp::init< CEGUI::Vector2< float > const & >(( bp::arg("v") )) );
        Vector2f_exposer.def( bp::self != bp::self );
        Vector2f_exposer.def( bp::self * bp::self );
        Vector2f_exposer.def( bp::self * bp::other< float >() );
        Vector2f_exposer.def( bp::self *= bp::self );
        Vector2f_exposer.def( bp::self *= bp::other< float >() );
        Vector2f_exposer.def( bp::self + bp::self );
        Vector2f_exposer.def( bp::self += bp::self );
        Vector2f_exposer.def( bp::self - bp::self );
        Vector2f_exposer.def( bp::self -= bp::self );
        Vector2f_exposer.def( bp::self / bp::self );
        Vector2f_exposer.def( bp::self / bp::other< float >() );
        Vector2f_exposer.def( bp::self /= bp::self );
        Vector2f_exposer.def( bp::self == bp::self );
        Vector2f_exposer.def_readwrite( "d_x", &CEGUI::Vector2< float >::d_x );
        Vector2f_exposer.def_readwrite( "d_y", &CEGUI::Vector2< float >::d_y );
    }

}
