// This file has been generated by Py++.

#include "boost/python.hpp"
#include "python_CEGUI.h"
#include "UDim.pypp.hpp"

namespace bp = boost::python;

void register_UDim_class(){

    { //::CEGUI::UDim
        typedef bp::class_< CEGUI::UDim > UDim_exposer_t;
        UDim_exposer_t UDim_exposer = UDim_exposer_t( "UDim", bp::init< >() );
        bp::scope UDim_scope( UDim_exposer );
        UDim_exposer.def( bp::init< float, float >(( bp::arg("scale"), bp::arg("offset") )) );
        UDim_exposer.def( bp::init< CEGUI::UDim const & >(( bp::arg("v") )) );
        UDim_exposer.def( bp::self != bp::self );
        UDim_exposer.def( bp::self * bp::other< float >() );
        UDim_exposer.def( bp::self * bp::self );
        UDim_exposer.def( bp::self *= bp::self );
        UDim_exposer.def( bp::self + bp::self );
        UDim_exposer.def( bp::self += bp::self );
        UDim_exposer.def( bp::self - bp::self );
        UDim_exposer.def( bp::self -= bp::self );
        UDim_exposer.def( bp::self / bp::self );
        UDim_exposer.def( bp::self /= bp::self );
        UDim_exposer.def( bp::self == bp::self );
        UDim_exposer.def_readwrite( "d_offset", &CEGUI::UDim::d_offset );
        UDim_exposer.def_readwrite( "d_scale", &CEGUI::UDim::d_scale );
    }

}
